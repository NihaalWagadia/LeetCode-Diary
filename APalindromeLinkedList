/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode newList = head;
        Stack<Integer>st = new Stack<>();
        while(newList!=null){
            st.push(newList.val);
            newList = newList.next;
        }
        while(!st.isEmpty()){
            int reverse = st.pop();
            if(head.val!=reverse){
                return false;
            }
            else{
                head = head.next;
            }
        }
        return true;
    }
}
