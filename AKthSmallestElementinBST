/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     PriorityQueue<Integer>pq = new PriorityQueue<>();
    public int kthSmallest(TreeNode root, int k) {
        dfs(root);
        int output=0;
        while(k!=0){
            output =pq.poll();
            k--;
        }
        return output;
    }
    
    public void dfs(TreeNode root){
        if(root!=null){
        pq.offer(root.val);
        }
            if(root.left!=null){
            dfs(root.left);
        }
        if(root.right!=null){
            dfs(root.right);
        }
    }
}
