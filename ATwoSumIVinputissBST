/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    boolean find = false;
    List<Integer>list = new ArrayList<>();
    public boolean findTarget(TreeNode root, int k) {
        if(root==null)return false;
        dfs(root, k);
        return find;
    }
    
    public void dfs(TreeNode root, int k){
        if(root==null)return;
        if(list.contains(k-root.val)){
            find = true;
            return ;
        }
        list.add(root.val);
        dfs(root.right, k);
        dfs(root.left, k);
        
    }
}
