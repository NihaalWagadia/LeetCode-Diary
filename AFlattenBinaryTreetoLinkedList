/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void flatten(TreeNode root) {
        Stack<TreeNode>st = new Stack<>();
        st.push(root);
        
        while(!st.isEmpty() && root!=null){
            TreeNode tn = st.pop();
            if(tn.right!=null){
                st.push(tn.right);
            }
            if(tn.left!=null){
                st.push(tn.left);
        }
            if(!st.isEmpty()){
                tn.right=st.peek();
            }
            tn.left=null;
        }
    }
}
