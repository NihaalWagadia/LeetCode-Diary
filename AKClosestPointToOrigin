class Solution {
    public int[][] kClosest(int[][] points, int K) {
        PriorityQueue<int[]>pq = new PriorityQueue<>(new distCompare());
        //Map<Double, int[]>hm = new HashMap<>();
        for(int i=0; i<points.length; i++){
            
            pq.offer(points[i]);
        }
        List<int[]>list = new ArrayList<>();
        //int [][] output = new int[K][2];
        for(int i=0; i<K; i++){
            //double results = pq.poll();
            list.add(pq.poll());
        }
        return list.toArray(new int[K][]);
    }
    
    
    class distCompare implements Comparator<int[]>{
        public int compare(int[]a, int b[]){
            double disA = Math.sqrt(a[0]*a[0]+a[1]*a[1]);
            double disB = Math.sqrt(b[0]*b[0]+b[1]*b[1]);
            return Double.compare(disA,disB);
        
        }
    
    }
}
