class Solution {
    int[][] dup;
    public void gameOfLife(int[][] board) {
        dup = new int[board.length][board[0].length];
      
        for(int i=0; i<board.length; i++){
            for(int j=0; j<board[0].length; j++){
                check(board, i, j);
                       // System.out.print((dup[i][j])+", ");

            }
        }
        for(int i=0; i<board.length; i++){
            for(int j=0; j<board[0].length; j++){
                board[i][j]=dup[i][j];

            }
        }
    
    }
    void check(int[][]board, int i, int j){
        int zero =0, one =0;
        if(i-1>=0 && j-1>=0 && j-1<board[0].length && i-1<board.length){
            if( board[i-1][j-1]==0){
            zero++;
        }
        else{
            one++;
        }
        }
        
        if(i-1>=0 && j>=0 && j<board[0].length && i-1<board.length){
        if(board[i-1][j]==0){
            zero++;
        }
        else{
            one++;
        }
        }
        
        if(i-1>=0 && j+1>=0 && j+1<board[0].length && i-1<board.length){
        if(board[i-1][j+1]==0){
            zero++;
        }
        else{
            one++;
        }
        }
        
        if(i>=0 && j+1>=0 && j+1<board[0].length && i<board.length){
        if(board[i][j+1]==0){
            zero++;
        }
        else{
            one++;
        }
        }
        
        if(i+1>=0 && j+1>=0 && j+1<board[0].length && i+1<board.length){
        if(board[i+1][j+1]==0){
            zero++;
        }
        else{
            one++;
        }
        }
        
        if(i+1>=0 && j>=0 && j<board[0].length && i+1<board.length){
        if(board[i+1][j]==0){
            zero++;
        }
        else{
            one++;
        }
        }
        
        if(i+1>=0 && j-1>=0 && j-1<board[0].length && i+1<board.length){
        if(board[i+1][j-1]==0){
            zero++;
        }
        else{
            one++;
        }
        }
        
        if(i>=0 && j-1>=0 && j-1<board[0].length && i<board.length){
        if(board[i][j-1]==0){
            zero++;
        }
        else{
            one++;
        }
        }
        
        if(board[i][j]==1){
            if(one<2){
                dup[i][j]=0;
                return;
            }
            else if(one==2 || one ==3){
                dup[i][j]=1;
                return;
            }
            else if(one>3){
                dup[i][j]=0;
                return;
            }
        }
        else{
            if(one==3){
                dup[i][j]=1;
                return;
            }
        }
      
    }
}
