/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>>list = new ArrayList<>();
        if(root==null)return list;
        Queue<TreeNode>queue = new LinkedList<>();
        ArrayList<Integer> x = new ArrayList<>();
        queue.add(root);
        x.add(root.val);
        list.add(new ArrayList<>(x));
        
        while(!queue.isEmpty()){
            ArrayList<Integer> tn = new ArrayList<>();            
            int queueSize = queue.size();
            for(int i=0; i<queueSize; i++){
                TreeNode temp = queue.poll();
                if(temp.left!=null){
                    queue.add(temp.left);
                    tn.add(temp.left.val);
            }
                if(temp.right!=null){
                    queue.add(temp.right);
                    tn.add(temp.right.val);
                }
            }
            if(tn.size()>0 ){
                list.add(new ArrayList<>(tn));
            }
            
        }
        return list;
    }
}
