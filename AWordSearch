class Solution {
    boolean arr[][];
    public boolean exist(char[][] board, String word) {
        arr = new boolean[board.length][board[0].length];
        for(int i=0; i<board.length; i++){
            for(int j=0; j<board[0].length; j++){
                if(board[i][j]==word.charAt(0) && dfs(board, word, i, j, 0)){
                    return true;
                }
            }
            
        }
        return false;
    }
    
    boolean dfs(char[][] board, String word, int i, int j, int k){
        if(k==word.length())return true;
        if(i>=board.length || j>=board[0].length || i<0 || j<0 
          || arr[i][j]==true || board[i][j] != word.charAt(k)){
            return false;
        }
        arr[i][j]=true;
        if(dfs(board, word, i+1, j, k+1) || dfs(board, word, i-1, j, k+1) || dfs(board, word, i, j-1, k+1) ||
          dfs(board, word, i, j+1, k+1)){
            return true;
        }
        arr[i][j]=false;
        return false;
        
    }
}
