/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
   // Treeode invert = root;
    List<Integer>list = new ArrayList<>();
    public TreeNode invertTree(TreeNode root) {
        if(root==null)return root;
       Queue<TreeNode>queue = new LinkedList<>();
        //list.add(root.val);
        queue.add(root);
        while(!queue.isEmpty()){
            TreeNode tn = queue.poll();
            TreeNode curr = tn.left;
            tn.left = tn.right;
            tn.right= curr;
            if(tn.left!=null){
            queue.offer(tn.left);
            
            }
            if(tn.right!=null){
            queue.offer(tn.right);
            
            }
        }
        
        return root;
    }
    
    
}
