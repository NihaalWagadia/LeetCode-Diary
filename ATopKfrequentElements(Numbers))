class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        PriorityQueue<Map.Entry<Integer,Integer>>pq = new PriorityQueue<>(
            (a,b)->a.getValue()-b.getValue());
        Map<Integer, Integer>hm = new HashMap<>();
        for(int num:nums){
            hm.put(num, hm.getOrDefault(num,0)+1);
        }
        int arr[] = new int[k];
        for(Map.Entry<Integer,Integer>map : hm.entrySet()){
            pq.offer(map);
            if(pq.size()>k){
                pq.poll();
            }    
        }
        int i=0;
        while(!pq.isEmpty()){
            arr[i]=pq.poll().getKey();
            i++;
        }
        return arr;
    }
}
